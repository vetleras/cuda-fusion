#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(unused)]

include!(concat!(env!("OUT_DIR"), "/driver_bindings.rs"));

#[derive(Debug)]
pub enum Error {
    InvalidValue,
    OutOfMemory,
    NotInitialized,
    Deinitialized,
    ProfilerDisabled,
    ProfilerNotInitialized,
    ProfilerAlreadyStarted,
    ProfilerAlreadyStopped,
    StubLibrary,
    DeviceUnavailable,
    NoDevice,
    InvalidDevice,
    DeviceNotLicensed,
    InvalidImage,
    InvalidContext,
    ContextAlreadyCurrent,
    MapFailed,
    UnmapFailed,
    ArrayIsMapped,
    AlreadyMapped,
    NoBinaryForGpu,
    AlreadyAcquired,
    NotMapped,
    NotMappedAsArray,
    NotMappedAsPointer,
    EccUncorrectable,
    UnsupportedLimit,
    ContextAlreadyInUse,
    PeerAccessUnsupported,
    InvalidPtx,
    InvalidGraphicsContext,
    NvlinkUncorrectable,
    JitCompilerNotFound,
    UnsupportedPtxVersion,
    JitCompilationDisabled,
    UnsupportedExecAffinity,
    UnsupportedDevsideSync,
    InvalidSource,
    FileNotFound,
    SharedObjectSymbolNotFound,
    SharedObjectInitFailed,
    OperatingSystem,
    InvalidHandle,
    IllegalState,
    NotFound,
    NotReady,
    IllegalAddress,
    LaunchOutOfResources,
    LaunchTimeout,
    LaunchIncompatibleTexturing,
    PeerAccessAlreadyEnabled,
    PeerAccessNotEnabled,
    PrimaryContextActive,
    ContextIsDestroyed,
    Assert,
    TooManyPeers,
    HostMemoryAlreadyRegistered,
    HostMemoryNotRegistered,
    HardwareStackError,
    IllegalInstruction,
    MisalignedAddress,
    InvalidAddressSpace,
    InvalidPc,
    LaunchFailed,
    CooperativeLaunchTooLarge,
    NotPermitted,
    NotSupported,
    SystemNotReady,
    SystemDriverMismatch,
    CompatNotSupportedOnDevice,
    MpsConnectionFailed,
    MpsRpcFailure,
    MpsServerNotReady,
    MpsMaxClientsReached,
    MpsMaxConnectionsReached,
    MpsClientTerminated,
    CdpNotSupported,
    CdpVersionMismatch,
    StreamCaptureUnsupported,
    StreamCaptureInvalidated,
    StreamCaptureMerge,
    StreamCaptureUnmatched,
    StreamCaptureUnjoined,
    StreamCaptureIsolation,
    StreamCaptureImplicit,
    CapturedEvent,
    StreamCaptureWrongThread,
    Timeout,
    GraphExecUpdateFailure,
    ExternalDevice,
    InvalidClusterSize,
    Unknown,
}

pub type Result<T> = std::result::Result<T, Error>;

impl CUresult {
    #[rustfmt::skip]
    pub fn to_result(self) -> Result<()> {
        match self.0 {
            cudaError_enum_CUDA_SUCCESS => Ok(()),
            cudaError_enum_CUDA_ERROR_INVALID_VALUE => Err(Error::InvalidValue),
            cudaError_enum_CUDA_ERROR_OUT_OF_MEMORY => Err(Error::OutOfMemory),
            cudaError_enum_CUDA_ERROR_NOT_INITIALIZED => Err(Error::NotInitialized),
            cudaError_enum_CUDA_ERROR_DEINITIALIZED => Err(Error::Deinitialized),
            cudaError_enum_CUDA_ERROR_PROFILER_DISABLED => Err(Error::ProfilerDisabled),
            cudaError_enum_CUDA_ERROR_PROFILER_NOT_INITIALIZED => Err(Error::ProfilerNotInitialized),
            cudaError_enum_CUDA_ERROR_PROFILER_ALREADY_STARTED => Err(Error::ProfilerAlreadyStarted),
            cudaError_enum_CUDA_ERROR_PROFILER_ALREADY_STOPPED => Err(Error::ProfilerAlreadyStopped),
            cudaError_enum_CUDA_ERROR_STUB_LIBRARY => Err(Error::StubLibrary),
            cudaError_enum_CUDA_ERROR_DEVICE_UNAVAILABLE => Err(Error::DeviceUnavailable),
            cudaError_enum_CUDA_ERROR_NO_DEVICE => Err(Error::NoDevice),
            cudaError_enum_CUDA_ERROR_INVALID_DEVICE => Err(Error::InvalidDevice),
            cudaError_enum_CUDA_ERROR_DEVICE_NOT_LICENSED => Err(Error::DeviceNotLicensed),
            cudaError_enum_CUDA_ERROR_INVALID_IMAGE => Err(Error::InvalidImage),
            cudaError_enum_CUDA_ERROR_INVALID_CONTEXT => Err(Error::InvalidContext),
            cudaError_enum_CUDA_ERROR_CONTEXT_ALREADY_CURRENT => Err(Error::ContextAlreadyCurrent),
            cudaError_enum_CUDA_ERROR_MAP_FAILED => Err(Error::MapFailed),
            cudaError_enum_CUDA_ERROR_UNMAP_FAILED => Err(Error::UnmapFailed),
            cudaError_enum_CUDA_ERROR_ARRAY_IS_MAPPED => Err(Error::ArrayIsMapped),
            cudaError_enum_CUDA_ERROR_ALREADY_MAPPED => Err(Error::AlreadyMapped),
            cudaError_enum_CUDA_ERROR_NO_BINARY_FOR_GPU => Err(Error::NoBinaryForGpu),
            cudaError_enum_CUDA_ERROR_ALREADY_ACQUIRED => Err(Error::AlreadyAcquired),
            cudaError_enum_CUDA_ERROR_NOT_MAPPED => Err(Error::NotMapped),
            cudaError_enum_CUDA_ERROR_NOT_MAPPED_AS_ARRAY => Err(Error::NotMappedAsArray),
            cudaError_enum_CUDA_ERROR_NOT_MAPPED_AS_POINTER => Err(Error::NotMappedAsPointer),
            cudaError_enum_CUDA_ERROR_ECC_UNCORRECTABLE => Err(Error::EccUncorrectable),
            cudaError_enum_CUDA_ERROR_UNSUPPORTED_LIMIT => Err(Error::UnsupportedLimit),
            cudaError_enum_CUDA_ERROR_CONTEXT_ALREADY_IN_USE => Err(Error::ContextAlreadyInUse),
            cudaError_enum_CUDA_ERROR_PEER_ACCESS_UNSUPPORTED => Err(Error::PeerAccessUnsupported),
            cudaError_enum_CUDA_ERROR_INVALID_PTX => Err(Error::InvalidPtx),
            cudaError_enum_CUDA_ERROR_INVALID_GRAPHICS_CONTEXT => Err(Error::InvalidGraphicsContext),
            cudaError_enum_CUDA_ERROR_NVLINK_UNCORRECTABLE => Err(Error::NvlinkUncorrectable),
            cudaError_enum_CUDA_ERROR_JIT_COMPILER_NOT_FOUND => Err(Error::JitCompilerNotFound),
            cudaError_enum_CUDA_ERROR_UNSUPPORTED_PTX_VERSION => Err(Error::UnsupportedPtxVersion),
            cudaError_enum_CUDA_ERROR_JIT_COMPILATION_DISABLED => Err(Error::JitCompilationDisabled),
            cudaError_enum_CUDA_ERROR_UNSUPPORTED_EXEC_AFFINITY => Err(Error::UnsupportedExecAffinity),
            cudaError_enum_CUDA_ERROR_UNSUPPORTED_DEVSIDE_SYNC => Err(Error::UnsupportedDevsideSync),
            cudaError_enum_CUDA_ERROR_INVALID_SOURCE => Err(Error::InvalidSource),
            cudaError_enum_CUDA_ERROR_FILE_NOT_FOUND => Err(Error::FileNotFound),
            cudaError_enum_CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND => Err(Error::SharedObjectSymbolNotFound),
            cudaError_enum_CUDA_ERROR_SHARED_OBJECT_INIT_FAILED => Err(Error::SharedObjectInitFailed),
            cudaError_enum_CUDA_ERROR_OPERATING_SYSTEM => Err(Error::OperatingSystem),
            cudaError_enum_CUDA_ERROR_INVALID_HANDLE => Err(Error::InvalidHandle),
            cudaError_enum_CUDA_ERROR_ILLEGAL_STATE => Err(Error::IllegalState),
            cudaError_enum_CUDA_ERROR_NOT_FOUND => Err(Error::NotFound),
            cudaError_enum_CUDA_ERROR_NOT_READY => Err(Error::NotReady),
            cudaError_enum_CUDA_ERROR_ILLEGAL_ADDRESS => Err(Error::IllegalAddress),
            cudaError_enum_CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES => Err(Error::LaunchOutOfResources),
            cudaError_enum_CUDA_ERROR_LAUNCH_TIMEOUT => Err(Error::LaunchTimeout),
            cudaError_enum_CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING => Err(Error::LaunchIncompatibleTexturing),
            cudaError_enum_CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED => Err(Error::PeerAccessAlreadyEnabled),
            cudaError_enum_CUDA_ERROR_PEER_ACCESS_NOT_ENABLED => Err(Error::PeerAccessNotEnabled),
            cudaError_enum_CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE => Err(Error::PrimaryContextActive),
            cudaError_enum_CUDA_ERROR_CONTEXT_IS_DESTROYED => Err(Error::ContextIsDestroyed),
            cudaError_enum_CUDA_ERROR_ASSERT => Err(Error::Assert),
            cudaError_enum_CUDA_ERROR_TOO_MANY_PEERS => Err(Error::TooManyPeers),
            cudaError_enum_CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED => Err(Error::HostMemoryAlreadyRegistered),
            cudaError_enum_CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED => Err(Error::HostMemoryNotRegistered),
            cudaError_enum_CUDA_ERROR_HARDWARE_STACK_ERROR => Err(Error::HardwareStackError),
            cudaError_enum_CUDA_ERROR_ILLEGAL_INSTRUCTION => Err(Error::IllegalInstruction),
            cudaError_enum_CUDA_ERROR_MISALIGNED_ADDRESS => Err(Error::MisalignedAddress),
            cudaError_enum_CUDA_ERROR_INVALID_ADDRESS_SPACE => Err(Error::InvalidAddressSpace),
            cudaError_enum_CUDA_ERROR_INVALID_PC => Err(Error::InvalidPc),
            cudaError_enum_CUDA_ERROR_LAUNCH_FAILED => Err(Error::LaunchFailed),
            cudaError_enum_CUDA_ERROR_COOPERATIVE_LAUNCH_TOO_LARGE => Err(Error::CooperativeLaunchTooLarge),
            cudaError_enum_CUDA_ERROR_NOT_PERMITTED => Err(Error::NotPermitted),
            cudaError_enum_CUDA_ERROR_NOT_SUPPORTED => Err(Error::NotSupported),
            cudaError_enum_CUDA_ERROR_SYSTEM_NOT_READY => Err(Error::SystemNotReady),
            cudaError_enum_CUDA_ERROR_SYSTEM_DRIVER_MISMATCH => Err(Error::SystemDriverMismatch),
            cudaError_enum_CUDA_ERROR_COMPAT_NOT_SUPPORTED_ON_DEVICE => Err(Error::CompatNotSupportedOnDevice),
            cudaError_enum_CUDA_ERROR_MPS_CONNECTION_FAILED => Err(Error::MpsConnectionFailed),
            cudaError_enum_CUDA_ERROR_MPS_RPC_FAILURE => Err(Error::MpsRpcFailure),
            cudaError_enum_CUDA_ERROR_MPS_SERVER_NOT_READY => Err(Error::MpsServerNotReady),
            cudaError_enum_CUDA_ERROR_MPS_MAX_CLIENTS_REACHED => Err(Error::MpsMaxClientsReached),
            cudaError_enum_CUDA_ERROR_MPS_MAX_CONNECTIONS_REACHED => Err(Error::MpsMaxConnectionsReached),
            cudaError_enum_CUDA_ERROR_MPS_CLIENT_TERMINATED => Err(Error::MpsClientTerminated),
            cudaError_enum_CUDA_ERROR_CDP_NOT_SUPPORTED => Err(Error::CdpNotSupported),
            cudaError_enum_CUDA_ERROR_CDP_VERSION_MISMATCH => Err(Error::CdpVersionMismatch),
            cudaError_enum_CUDA_ERROR_STREAM_CAPTURE_UNSUPPORTED => Err(Error::StreamCaptureUnsupported),
            cudaError_enum_CUDA_ERROR_STREAM_CAPTURE_INVALIDATED => Err(Error::StreamCaptureInvalidated),
            cudaError_enum_CUDA_ERROR_STREAM_CAPTURE_MERGE => Err(Error::StreamCaptureMerge),
            cudaError_enum_CUDA_ERROR_STREAM_CAPTURE_UNMATCHED => Err(Error::StreamCaptureUnmatched),
            cudaError_enum_CUDA_ERROR_STREAM_CAPTURE_UNJOINED => Err(Error::StreamCaptureUnjoined),
            cudaError_enum_CUDA_ERROR_STREAM_CAPTURE_ISOLATION => Err(Error::StreamCaptureIsolation),
            cudaError_enum_CUDA_ERROR_STREAM_CAPTURE_IMPLICIT => Err(Error::StreamCaptureImplicit),
            cudaError_enum_CUDA_ERROR_CAPTURED_EVENT => Err(Error::CapturedEvent),
            cudaError_enum_CUDA_ERROR_STREAM_CAPTURE_WRONG_THREAD => Err(Error::StreamCaptureWrongThread),
            cudaError_enum_CUDA_ERROR_TIMEOUT => Err(Error::Timeout),
            cudaError_enum_CUDA_ERROR_GRAPH_EXEC_UPDATE_FAILURE => Err(Error::GraphExecUpdateFailure),
            cudaError_enum_CUDA_ERROR_EXTERNAL_DEVICE => Err(Error::ExternalDevice),
            cudaError_enum_CUDA_ERROR_INVALID_CLUSTER_SIZE => Err(Error::InvalidClusterSize),
            cudaError_enum_CUDA_ERROR_UNKNOWN => Err(Error::Unknown),
            e => panic!("unrecognized error code {}", e),
        }
    }
}
